Implement endpoints for:
	User:
		Register new user.		POST <
		Change username.		PUT ????
		Change pw.			PUT <
		Read user info MINUS PW/MAIL	GET <
		Change username.		PUT <
		Change pw.			PUT <
		Read all accounts of a user. 	GET <
		Read all teams of a user.	GET <	TODO DELETE POJOS AND REMAKE INTO MAPS
		Delete account.			DELETE <
	RegionalAccount:
		Add/Change entity		POST <
		Read all user accounts.		GET  <
		Delete entity.			DELETE <
	Team:
		Create new team.		POST <
		Change team name.		PUT <
		Add user to team.		PUT <
		Remove user from team.		DELETE <
		Read all teams.			GET <
		Read specific team.		GET <
	Tournament:
		Create new tournament.		POST <
		Delete tournament.		DELETE <
		Change tournament name.		PUT <
		Set Victor.			PUT <
		Change tournament region.	PUT <
		Read all tournaments.		GET <
		Get all teams of a tournament	GET <
		Read specific tournament.	GET <
	TournamentTeams: //this one has been reworked into TournamentController
		Add a new team.			POST <
		Remove a team.			DELETE <

ADD NEEDED FIELDS TO DB:
	ADD rank FIELD TO REGION ACCOUNT <
ADD UNIQUE CONSTRAINTS TO DB:
	site_user username must be unique <
	site_user email must be unique <
	team team_name must be unque <
	tournament name_tournament must be unique <
REMAKE REGIONAL ACCOUNT TO REFLECT DB:
	ADD RANK SHORT FIELD <
ADD DB-EXCEPTION HANDLING TO BACKEND:
	SITEUSERCONTROLLER 
ADD HTTP RESPONSE CODES HANDLING TO BACKEND:
	EVERY TIME U RETURN STRING -> RESPONSEENTITY
	EXAMPLE: TOURNAMENT/ADDTEAM
	#TODO
REMAKE BACKEND WITH OPTIONALS:
	#TODO

WRITE SEEDING ALGO:
	#TODO
CREATE FRONTEND:
	WATCH REACT TUTORIALS
	#TODO
ADD SPRING BOOT SECURITY TO THE PROJECT:
	#TODO